
model Users {
    id          String      @id @default(uuid()) @map("user_id")
    firstName   String
    lastName    String
    password    String
    eMail       String      @unique @map("e_mail")
    createdAt   DateTime    @default(now()) @map("created_at")
    updatedAt   DateTime    @updatedAt @map("updated_at")
    tasks       Tasks[]
}

model Tasks {
    id           String     @id @default(uuid()) @map("task_id")
    taskName     String
    isCompleted  Boolean
    createdBy    String     @map("created_by")
    updatedBy    String     @map("updated_by")
    createdAt    DateTime   @default(now()) @map("created_at")
    updatedAt    DateTime   @updatedAt @map("updated_at")
    comments     Comments[]
    user         Users?     @relation(fields: [userId], references: [id])
    userId       String?
}

model Comments{
    id           String     @id @default(uuid()) @map("comment_id")
    commentText  String
    isCompleted  Boolean
    createdBy    String     @map("created_by")
    updatedBy    String     @map("updated_by")
    createdAt    DateTime   @default(now()) @map("created_at")
    updatedAt    DateTime   @updatedAt @map("updated_at")
    tasks        Tasks?     @relation(fields: [taskId], references: [id])
    taskId       String?
}